apiVersion: extensions/v1beta1
kind: Ingress

# ----------- WARNING ------------
#
# IT'S BEST PRACTICE TO USE THIS INGRESS AS AN EXAMPLE/GUIDE TO UNDERSTAND WHAT IS REQUIRED TO ROUTE TRAFFIC TO
# SPINNAKER ADVANCED USER LAB (SAUL).  IF YOU HAPPEN TO BE USING THE EXACT SETUP DESCRIBED BELOW (NGINX INGRESS
# CONTROLLER WITH CERT-MANAGER) THEN THIS INGRESS CAN BE DEPLOYED ONCE THE APPROPRIATE EDITS ARE MADE.  OTHERWISE USE
# THIS INGRESS AS A GUIDE WHEN WORKING WITH YOUR OWN INGRESS TOOLING.
#
# ----------- NOTES ------------
#
# You will need to edit the following to match your cluster-issuer you're using for cert-manager:
#
#    - metadata.annotations.cert-manager.io/cluster-issuer
#
# You will need to edit the following to match your domain:
#
#    - spec.rules[0].host
#    - spec.tls[0].hosts[0]
#
# -----------------------------

metadata:
  annotations:
    # Annotation indicating name of cert-manager cluster issuer to use for TLS definition below
    # REQUIRED EDIT: Change to match your cluster-issuer
    cert-manager.io/cluster-issuer: letsencrypt-prod

    # Annotation required by NGINX Ingress Controller
    kubernetes.io/ingress.class: nginx

    # Annotations to rewrite traffic sent to the sub-directory where SAUL is and route it to the base path at the Pod
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/saul)$ $1/ permanent;
    nginx.ingress.kubernetes.io/rewrite-target: /$1

  name: spinnaker-nginx-ingress

  # Namespace of the Spinnaker Microservices
  namespace: spinnaker-system
spec:
  rules:
    # REQUIRED EDIT:  Change 'host' to your base deck/gate domain
    - host: spinnaker.example.com
      http:
        paths:
          - backend:
              serviceName: spinnaker-saul
              servicePort: 80
            path: /(saul.*)
  tls:
    - hosts:
        # REQUIRED EDIT:  Change to your base deck/gate domain
        - spinnaker.example.com
      secretName: spinnaker-deck-nginx-ingress-tls
